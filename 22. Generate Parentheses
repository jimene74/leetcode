/*

Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

*/

class Solution {
    ArrayList<String> response;
    public List<String> generateParenthesis(int n) {
        response = new ArrayList<>();
        dfs(n, 0, 0, new StringBuilder());
        return response;
    }
    
    public void dfs(int n, int open, int close, StringBuilder sb){
        if(sb.length()==n*2){
            response.add(sb.toString());
        }
            
        if(close<open){
            sb.append(')');
            dfs(n, open, close+1, sb);
            sb.deleteCharAt(sb.length()-1);
        }
        
        if(open<n){
            sb.append('(');
            dfs(n, open+1, close, sb);
            sb.deleteCharAt(sb.length()-1);
        }
        
    }
}
