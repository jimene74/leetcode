/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    List<Integer> response;
    public List<Integer> preorder(Node root) {
       
        response = new ArrayList<>();
         if(root==null){return response;}
        Stack<Node> s = new Stack<>();
        s.add(root);
        while(!s.isEmpty()){
            Node r = s.pop();
            response.add(r.val);
            Collections.reverse(r.children);
            for(Node c : r.children){
                if(c!=null){
                    s.add(c);
                }
                
            }
        }
        
        return response;
    }
}
