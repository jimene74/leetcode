/*

Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
An input string is valid if:
Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.

*/

class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
        for(int i =0;i<s.length();i++){
            char c = s.charAt(i);
            if(c=='(' || c=='{' || c=='['){
                stack.push(c);
            }else{
                if(stack.isEmpty()){
                    return false;
                }
                Character top = stack.pop();
                if(s.charAt(i)==')'&&top!='('){
                    return false;
                }
                else if(s.charAt(i)==']'&&top!='['){
                    return false;
                }
                else if(s.charAt(i)=='}'&&top!='{'){
                    return false;
                } 
            }
        }
        if(!stack.isEmpty()){
            return false;
        }
        return true;
    }
}
