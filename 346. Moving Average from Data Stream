/*

Given a stream of integers and a window size, calculate the moving average of all integers in the sliding window.
Implement the MovingAverage class:
MovingAverage(int size) Initializes the object with the size of the window size.
double next(int val) Returns the moving average of the last size values of the stream.

*/

class MovingAverage {

    int maxSize = 0;
    Deque<Integer> window = new LinkedList<>();
    public MovingAverage(int size) {
        maxSize = size;
    }
    
    public double next(int val) {
        window.addLast(val);
        if(window.size()>maxSize){
            window.removeFirst();
        }
        return calculateAverage();
    }
    
    public double calculateAverage(){
        double totalSum = 0;
        for(Integer num : window){
            totalSum += num;
        }
        double average = totalSum/window.size();
        return average;
    }
}

/**
 * Your MovingAverage object will be instantiated and called as such:
 * MovingAverage obj = new MovingAverage(size);
 * double param_1 = obj.next(val);
 */
