/*

Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.

*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode l3 = new ListNode();
        recurse(l1,l2,l3);
        return l3.next;
    }
    
    private void recurse(ListNode l1, ListNode l2, ListNode l3){
        if(l1==null&&l2==null){
            return;
        }else if(l1==null){
            l3.next = new ListNode(l2.val);
            recurse(l1, l2.next, l3.next);
        }else if(l2==null){
            l3.next = new ListNode(l1.val);
            recurse(l1.next, l2, l3.next);
        }else{
            if(l1.val<l2.val){
                l3.next = new ListNode(l1.val);
                recurse(l1.next, l2, l3.next);
            }else{
                l3.next = new ListNode(l2.val);
                recurse(l1,l2.next,l3.next);
            }
        }
    }
}
