/*

Given the root of a binary tree, return the sum of all left leaves.

*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int count;
    public int sumOfLeftLeaves(TreeNode root) {
        count = 0;
        dfs(root);
        return count;
    }
    
    public void dfs(TreeNode root){
        if(root==null){
            return;
        }
        if(root.left!=null&&isLeaf(root.left)){
            count += root.left.val;
        }
        
        dfs(root.right);
        dfs(root.left);
    } 
    
    public boolean isLeaf(TreeNode n){
        if(n.left==null && n.right==null){
            return true;
        }
        return false;
    }
    
}
