class MyLinkedList {

    Node head;
    int size;
    public MyLinkedList() {
        head = new Node(0);
        size = 0;
    }
    
    public int get(int index) {
        Node tracker = head;
        for(int i=0;i<=index;i++){
            if(tracker.next==null){
                
                Node newTrack = head;
               // System.out.println("NEW");
        while(newTrack!=null){
           // System.out.println(newTrack.val);
            newTrack = newTrack.next;
        }
                
                return -1;
            }
            tracker = tracker.next;
        }
        
        Node newTrack = head;
        //System.out.println("NEW");
        while(newTrack!=null){
            //System.out.println(newTrack.val);
            newTrack = newTrack.next;
        }
        
        return tracker.val;
    }
    
    public void addAtHead(int val) {
        Node temp = head.next;
        head.next = new Node(val);
        Node newNode = head.next;
        newNode.next = temp;
        size++;
        
        Node newTrack = head;
        //System.out.println("NEW");
        while(newTrack!=null){
            //System.out.println(newTrack.val);
            newTrack = newTrack.next;
        }
    }
    
    public void addAtTail(int val) {
        
        Node tracker = head;
        for(int i=0;i<size;i++){
            if(tracker.next==null){
                
                Node newTrack = head;
                //System.out.println("NEW");
        while(newTrack!=null){
            //System.out.println(newTrack.val);
            newTrack = newTrack.next;
        }
                
                return;
            }
            tracker = tracker.next;
        }
        tracker.next = new Node(val);
        size++;
        
        Node newTrack = head;
        //System.out.println("NEW");
        while(newTrack!=null){
            //System.out.println(newTrack.val);
            newTrack = newTrack.next;
        }
    }
    
    public void addAtIndex(int index, int val) {
        Node tracker = head;
        for(int i=0;i<index;i++){
            if(tracker.next==null){
                
                Node newTrack = head;
               // System.out.println("NEW");
        while(newTrack!=null){
           //System.out.println(newTrack.val);
            newTrack = newTrack.next;
        }
                
                return;
            }
            tracker = tracker.next;
        }
        Node temp = tracker.next;
        tracker.next = new Node(val);
        Node newNode = tracker.next;
        newNode.next = temp;
        size++;
        
        Node newTrack = head;
        //System.out.println("NEW");
        while(newTrack!=null){
            //System.out.println(newTrack.val);
            newTrack = newTrack.next;
        }
        
    }
    
    public void deleteAtIndex(int index) {
        Node tracker = head;
        Node temp = head;
        for(int i=0;i<=index;i++){
            if(tracker.next==null){
                return;
            }
            temp = tracker;
            tracker = tracker.next;
        }
        
        temp.next = tracker.next;        
        size--;
        
        Node newTrack = head;
        //System.out.println("NEW");
        while(newTrack!=null){
            //System.out.println(newTrack.val);
            newTrack = newTrack.next;
        }
    }
    
    class Node{
        int val;
        Node next;
        Node(int val){
            this.val = val;
            this.next = null;
        }
    }
}

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList obj = new MyLinkedList();
 * int param_1 = obj.get(index);
 * obj.addAtHead(val);
 * obj.addAtTail(val);
 * obj.addAtIndex(index,val);
 * obj.deleteAtIndex(index);
 */
